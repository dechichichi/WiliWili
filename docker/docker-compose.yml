services:
  wiliwili-redis:
    container_name: wiliwili-redis
    image: redis:bookworm
    volumes:
       - ./data/redis-data:/data
    ports:
      - "6379:6379"
    env_file:
      - "./env/redis.env"
    networks:
      - wiliwili

  wiliwili_mysql:
    image: mysql:8.0
    container_name: wiliwili-mysql
    restart: always
    env_file:
      - "./env/mysql.env"
    ports:
      - "3306:3306"
    networks:
      - wiliwili
    volumes:
      - ../config/sql:/docker-entrypoint-initdb.d
      - ./data/mysql:/var/lib/mysql
   # etcd 服务，分布式键值存储系统，用于服务发现、配置管理
  wiliwili-etcd:
    container_name: wiliwili-etcd
    image: quay.io/coreos/etcd:v3.5.5
    restart: always
    ports:
      - 2379:2379
      - 2380:2380
    env_file:
      - "./env/etcd.env"
    volumes:
      - ./script:/script
      - ../config:/config
    networks:
      - wiliwili
    entrypoint: [ "sh", "-c", "chmod +x /script/etcd-monitor.sh && /script/etcd-monitor.sh & exec etcd" ]

  wiliwili-minio:
    container_name: wiliwili-minio
    image: quay.io/minio/minio:latest
    ports:
    - "9000:9000"
    - "9001:9001"  # 添加控制台端口
    env_file:
    - ./env/minio.env
    volumes:
    - ./data/minio-data:/data
    networks:
    - wiliwili
    command: server /data --console-address ":9000" --address ":9001"
  
  wiliwili-zookeeper:
    container_name: wiliwili-zookeeper
    image: bitnami/zookeeper:latest
    restart: always
    ports:
      - "2181:2181"  # Zookeeper 服务端口
    volumes:
      - ./data/zookeeper-data:/data  # 数据存储目录
    networks:
      - wiliwili
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  wiliwili-kafka:
    container_name: wiliwili-kafka
    image: wurstmeister/kafka:latest
    restart: always
    ports:
      - "9092:9092"  # Kafka 服务端口
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: wiliwili-zookeeper:2181  # 需要一个 Zookeeper 服务
      KAFKA_CREATE_TOPICS: "wiliwili:1:1"  # 创建一个名为 wiliwili 的主题，1 个分区，1 个副本
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LOG_DIRS: /kafka-data
    volumes:
      - ./data/kafka-data:/kafka-data  # 数据存储目录
    networks:
      - wiliwili
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - wiliwili-zookeeper

  wiliwili-jaeger:
    container_name: wiliwili-jaeger
    image: jaegertracing/all-in-one:1.42
    ports:
      - "5775:5775/udp"  # Collects logs
      - "6831:6831/udp"  # Collects traces
      - "6832:6832/udp"  # Collects metrics
      - "5778:5778"      # Admin HTTP server
      - "14268:14268"    # Jaeger gRPC collector
      - "14250:14250"    # Jaeger gRPC query
      - "16686:16686"    # Jaeger UI
      - "9411:9411"      # Zipkin HTTP collector
    networks:
      - wiliwili
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411 #jeagger和otel端口应该一致
networks:
  wiliwili:
    driver: bridge  # 默认使用桥接网络
    name: wiliwili
