// Code generated by hertz generator.

package comment

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	comment "wiliwili/app/gateway/model/api/comment"
)

// CommentVideo .
// @router api/v1/comment/commentvideo [POST]
func CommentVideo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.CommentVideoReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(comment.CommentVideoResp)

	c.JSON(consts.StatusOK, resp)
}

// ReplyComment .
// @router api/v1/comment/commentreply [POST]
func ReplyComment(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.ReplyCommentReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(comment.ReplyCommentResp)

	c.JSON(consts.StatusOK, resp)
}

// GetVideoCommentList .
// @router api/v1/comment/videocommentlist [GET]
func GetVideoCommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.GetVideoCommentListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(comment.GetVideoCommentListResp)

	c.JSON(consts.StatusOK, resp)
}

// GetCommentReplyList .
// @router api/v1/comment/commentreplylist [GET]
func GetCommentReplyList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.GetCommentReplyListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(comment.GetCommentReplyListResp)

	c.JSON(consts.StatusOK, resp)
}

// DeleteComment .
// @router api/v1/comment/deletecomment [DELETE]
func DeleteComment(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.DeleteCommentReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(comment.DeleteCommentResp)

	c.JSON(consts.StatusOK, resp)
}
